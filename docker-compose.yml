services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
    env_file:
      - .env
    environment:
      - DEBUG=${DEBUG:-True}
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    networks:
      - geopoints_net

  db:
    image: postgis/postgis:15-3.3
    platform: linux/amd64
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-geopointsdb}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - geopoints_net

  db-test:
    image: postgis/postgis:15-3.3
    platform: linux/amd64
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_DB=${POSTGRES_TEST_DB:-geopoints_test}
    ports:
      - "5433:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - geopoints_net

volumes:
  postgres_data:
  postgres_test_data:

networks:
  geopoints_net:
    driver: bridge