name: GeoPoints API CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgis/postgis:15-3.3
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: geopoints_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov sqlalchemy-utils httpx pytest-asyncio
          pip install -r requirements.txt
      
      - name: Verify PostGIS
        run: |
          # Install the PostgreSQL client
          sudo apt-get update
          sudo apt-get install -y postgresql-client
          
          # Check if PostGIS is installed in the database
          PGPASSWORD=postgres psql -h localhost -U postgres -d geopoints_test -c "SELECT PostGIS_version();"
      
      - name: Run tests
        env:
          POSTGRES_SERVER: localhost
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: geopoints_test
          SECRET_KEY: test_secret_key_for_ci
          TESTING: "true"
        run: |
          pytest --cov=app
      
      - name: Generate coverage report
        run: |
          pytest --cov=app --cov-report=xml
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black isort flake8
      
      - name: Lint with isort
        run: |
          isort --check-only --profile black .
      
      - name: Lint with black
        run: |
          black --check .
      
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics